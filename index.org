#+OPTIONS: reveal_center:nil reveal_control:nil reveal_height:-1
#+OPTIONS: reveal_history:t reveal_keyboard:t
#+OPTIONS: reveal_mathjax:t reveal_overview:t reveal_progress:t
#+OPTIONS: reveal_rolling_links:nil reveal_slide_number:t num:nil
#+OPTIONS: reveal_width:-1 toc:nil
#+REVEAL_MARGIN: -1
#+REVEAL_MIN_SCALE: -1
#+REVEAL_MAX_SCALE: -1
# #+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/2.6.2/
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/
#+REVEAL_TRANS: none
#+REVEAL_SPEED: default
#+REVEAL_THEME: serif
#+REVEAL_EXTRA_CSS:
#+REVEAL_EXTRA_JS:
#+REVEAL_HLEVEL: 2
#+REVEAL_TITLE_SLIDE_TEMPLATE: <br><h2>%t</h2> <h3>%a</h3> <h4>%e</h4> <h4>%d</h4>
#+REVEAL_MATHJAX_URL: http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML
#+REVEAL_PREAMBLE:
#+REVEAL_HEAD_PREAMBLE:
#+REVEAL_POSTAMBLE:
# #+REVEAL_PLUGINS:
#+TITLE: Inferring the MYC GRN
#+DATE: Sonnhammer group meeting; 2015-03-26
#+AUTHOR: Andreas Tj√§rnberg
#+EMAIL: andreas.tjarnberg@scilifelab.se
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.3.1 (Org mode 8.3beta)


* Why?
#+reveal_html: <br>
#+reveal_html: <br>

*Specific*
- Myc is a very important cancer-related transcription factor.
- Thousands of genes have been shown to be targets of Myc

#+reveal_html: <br>
#+reveal_html: <br>

*General*
- Gene Regulatory networks gives insight in to information flows in living cells
- Complex regulatory systems responses could be predicted, controlled and altered

* What?

** The Data Properties
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <div style="font-size: 80%;">
- siRNA knockdown data
- 45 genes (40)
- 3$^*$ replicates ($\cdot$ 2 technical) single gene knockdowns
- single set of experiments with double knockdowns
- SNR$_v= 0.56$
- kondition number, $\kappa \approx 70$
#+reveal_html: </div>

** The Data Properties
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <table width="100%" cellpadding="0" cellspacing="10" border="0">
#+reveal_html: <tr>
#+reveal_html: <td width=70% style="vertical-align:middle">

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \text{SNR}_v &\equiv&  \arg\min_i \frac{||\boldsymbol{y}_i||}{\sqrt{\chi^{-2}(\alpha,M)\lambda}}\\
    \\
    \\
    \\
    \\
  \end{array}
  \]
#+end_src

#+reveal_html: </td>
#+reveal_html: <td width=30% style="vertical-align:middle">

#+reveal_html: </td>
#+reveal_html: </tr>
#+reveal_html: </table>

** The Data Properties
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <table width="100%" cellpadding="0" cellspacing="10" border="0">
#+reveal_html: <tr>
#+reveal_html: <td width=70% style="vertical-align:middle">

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \text{SNR}_v &\equiv&  \arg\min_i \frac{||\boldsymbol{y}_i||}{\sqrt{\chi^{-2}(\alpha,M)\lambda}}\\
    \\
    \\
    \\
    \kappa &\equiv& \frac{\sigma_1}{\sigma_N}\\
  \end{array}
  \]
#+end_src

#+reveal_html: </td>
#+reveal_html: <td width=30% style="vertical-align:middle">

#+reveal_html: </td>
#+reveal_html: </tr>
#+reveal_html: </table>

** The Data Properties
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <table width="100%" cellpadding="0" cellspacing="10" border="0">
#+reveal_html: <tr>
#+reveal_html: <td width=70% style="vertical-align:middle">

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \text{SNR}_v &\equiv&  \arg\min_i \frac{||\boldsymbol{y}_i||}{\sqrt{\chi^{-2}(\alpha,M)\lambda}}\\
    \\
    \\
    \\
    \kappa &\equiv& \frac{\sigma_1}{\sigma_N}\\
  \end{array}
  \]
#+end_src

#+attr_html: :width 80% :style position:relative; left:400px; top:-250px;
[[file:img/ill-well-from-single-SNR.svg]]

#+reveal_html: </td>
#+reveal_html: <td width=30% style="vertical-align:middle">

#+reveal_html: </td>
#+reveal_html: </tr>
#+reveal_html: </table>

** The Model
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \dot{x}_i(t) &=& \sum_{j=1}^N a_{ij}x_j(t) + p_i(t) - f_i(t)\\
    \\
    \\
    \\
  \end{array}
  \]
#+end_src

#+attr_html: :width 50% :style position:relative; left:250px; top:-150px;
[[file:img/generic_network.svg]]

** The Model
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \dot{x}_i(t) &=& \sum_{j=1}^N a_{ij}x_j(t) + p_i(t) - f_i(t)\\
    \\
    \\
    y_i(t) &=& x_i(t) + e_i(t)\\
  \end{array}
  \]
#+end_src

#+attr_html: :width 50% :style position:relative; left:250px; top:-150px;
[[file:img/generic_network.svg]]

* How?
** Model fitting
<<sec:model_fitting_1>>
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \boldsymbol{Y} - \boldsymbol{E} = -\boldsymbol{A}^{-1}(\boldsymbol{P} - \boldsymbol{F})
  \]
#+end_src

** Model fitting
<<sec:model_fitting_2>>
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \boldsymbol{Y} - \boldsymbol{E} = -\boldsymbol{A}^{-1}(\boldsymbol{P} - \boldsymbol{F})
  \]
#+end_src

#+attr_html: :width 10% :style position:relative; left:165px; top:-70px;
[[file:img/ic_close_24px_red.svg]]

** Model fitting
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \begin{array}{r c l}
    \boldsymbol{Y} - \boldsymbol{E} &=& -\boldsymbol{A}^{-1}\boldsymbol{P}\\
    &\Downarrow&\\
    \boldsymbol{\hat{Y}} &=& -\boldsymbol{A}^{-1}\boldsymbol{P}\\
    &\Downarrow&\\
    \boldsymbol{A}\boldsymbol{\hat{Y}} &=& -\boldsymbol{P}\\
    &\Downarrow&\\
    \boldsymbol{A}\boldsymbol{\hat{Y}} + \boldsymbol{P} &\approx& \boldsymbol{0}\\
  \end{array}
  \]
#+end_src

** Model fitting
#+reveal_html: <br>
#+reveal_html: <br>

Least squares
#+begin_src latex :exports results :results html
  \[
  \begin{array}
    \boldsymbol{A_{ls}} = \arg\min_{\boldsymbol{A}} || \boldsymbol{A}\boldsymbol{\hat{Y}} + \boldsymbol{P}||_{\ell_2}\\
    \text{subject to:}~~    \boldsymbol{A}\boldsymbol{\hat{Y}} = -\boldsymbol{P}\\
  \end{array}
  \]
#+end_src

#+reveal_html: <br>
#+reveal_html: <br>

LASSO
#+begin_src latex :exports results :results html
  \[
  \boldsymbol{A_{\zeta}} = \arg\min_{\boldsymbol{A}} || \boldsymbol{A}\boldsymbol{\hat{Y}} + \boldsymbol{P}||_{\ell_2} + \zeta||\boldsymbol{A}||_{\ell_1}
  \]
#+end_src


** Bootstrap Regularization
#+reveal_html: <br>
#+reveal_html: <br>

- Statistical method for estimating statistics
- Applied to the LASSO formulation by /Bach 2008/

** Bootstrap Regularization
#+reveal_html: <br>
#+reveal_html: <br>
*Procedure*
1. Sample uniformly from data $[\boldsymbol{\hat{Y}}, \boldsymbol{P}]$ a new data set $[\boldsymbol{\hat{Y}_{bs}}, \boldsymbol{P_{bs}}]$
2. Apply LASSO on the new data set so that
   #+begin_src latex :exports results :results html
     \[
     \boldsymbol{A_{reg}}(\zeta) = \arg\min_{\boldsymbol{A}} || \boldsymbol{A}\boldsymbol{\hat{Y}_{bs}} + \boldsymbol{P_{bs}}||_{\ell_2} + \zeta||\boldsymbol{A}||_{\ell_1}
     \]
   #+end_src
3. Repeat for $n$ number of bootstraps.
4. A link $s_{ij} \in \boldsymbol{A_{bs}}$ has bootstrap support $s_{ij} = \frac{e_{ij}}{n}\cdot 100\%$ where $e_{ij}$ is the times we have seen $a_{ij}$ in $\boldsymbol{A_{reg}}(\zeta)$

** Bootstrap Regularization

#+attr_html: :width 80%
[[file:img/MYC_bootstrap_1000_frequency_M115_L1222_Z100e-02.svg]]

#+REVEAL: split

#+attr_html: :width 80%
[[file:img/MYC_bootstrap_1000_frequency_M115_L493_Z631e-02.svg]]

#+REVEAL: split

#+attr_html: :width 80%
[[file:img/MYC_bootstrap_1000_frequency_M115_L312_Z126e-01.svg]]


** Prediction
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <div style="font-size: 60%;">
#+begin_src latex :exports results :results html
  \[
  \begin{array}{c c c c} 
    % & {\Large{\boldsymbol{\hat{Y}}}} & & {\Large{\boldsymbol{Y}}}\\
    \text{Predicted} & & \text{Measured} & \\

    {\Large{\text{RSS}}} = & 
                             \begin{vmatrix} \begin{pmatrix} \begin{bmatrix}
                                   \hat{y}_{1,1} & \hat{y}_{1,2} & \cdots & \hat{y}_{1,n} \\
                                   \hat{y}_{2,1} & \hat{y}_{2,2} & \cdots & \hat{y}_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   \hat{y}_{m,1} & \hat{y}_{m,2} & \cdots & \hat{y}_{m,n}
                                 \end{bmatrix} & - & 
                                 \begin{bmatrix}
                                   y_{1,1} & y_{1,2} & \cdots & y_{1,n} \\
                                   y_{2,1} & y_{2,2} & \cdots & y_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   y_{m,1} & y_{m,2} & \cdots & y_{m,n}
                                 \end{bmatrix} \end{pmatrix}^{.2} \end{vmatrix} \\
  \end{array}
  \]
#+end_src
#+reveal_html: </div>

#+reveal_html: <br>
#+reveal_html: <br>

** Prediction
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <div style="font-size: 60%;">
#+begin_src latex :exports results :results html
  \[
  \begin{array}{c c c c} 
    % & {\Large{\boldsymbol{\hat{Y}}}} & & {\Large{\boldsymbol{Y}}}\\
    \text{Predicted} & & \text{Measured} & \\

    {\Large{\text{RSS}}} = & 
                             \begin{vmatrix} \begin{pmatrix} \begin{bmatrix}
                                   \hat{y}_{1,1} & \hat{y}_{1,2} & \cdots & \hat{y}_{1,n} \\
                                   \hat{y}_{2,1} & \hat{y}_{2,2} & \cdots & \hat{y}_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   \hat{y}_{m,1} & \hat{y}_{m,2} & \cdots & \hat{y}_{m,n}
                                 \end{bmatrix} & - & 
                                 \begin{bmatrix}
                                   y_{1,1} & y_{1,2} & \cdots & y_{1,n} \\
                                   y_{2,1} & y_{2,2} & \cdots & y_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   y_{m,1} & y_{m,2} & \cdots & y_{m,n}
                                 \end{bmatrix} \end{pmatrix}^{.2} \end{vmatrix} \\
  \end{array}
  \]
#+end_src
#+reveal_html: </div>

#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  {\large{\text{RSS} \sim \chi^2(mn)}}
  \]
#+end_src

** Prediction
#+reveal_html: <br>
#+reveal_html: <br>

#+reveal_html: <div style="font-size: 60%;">
#+begin_src latex :exports results :results html
  \[
  \begin{array}{c c c c} 
    % & {\Large{\boldsymbol{\hat{Y}}}} & & {\Large{\boldsymbol{Y}}}\\
    \text{Predicted} & & \text{Measured} & \\

    {\Large{\text{RSS}}} = & 
                             \begin{vmatrix} \begin{pmatrix}
                                 \begin{bmatrix}
                                   \hat{y}_{1,1} & \hat{y}_{1,2} & \cdots & \hat{y}_{1,n} \\
                                   \hat{y}_{2,1} & \hat{y}_{2,2} & \cdots & \hat{y}_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   \hat{y}_{m,1} & \hat{y}_{m,2} & \cdots & \hat{y}_{m,n}
                                 \end{bmatrix} & - & 
                                 \begin{bmatrix}
                                   y_{1,1} & y_{1,2} & \cdots & y_{1,n} \\
                                   y_{2,1} & y_{2,2} & \cdots & y_{2,n} \\
                                   \vdots & \vdots & \ddots & \vdots \\
                                   y_{m,1} & y_{m,2} & \cdots & y_{m,n}
                                 \end{bmatrix} 
                               \end{pmatrix}^{.2} \end{vmatrix} \\
  \end{array}
  \]
#+end_src
#+reveal_html: </div>

#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  {\large{\text{RSS} \sim \chi^2(mn)}}
  \]
#+end_src

#+attr_html: :width 50% :style position:relative; left:150px; top:-100px;
[[file:img/Statistical_test_text.svg]]

* Results

#+attr_html: :width 100% 
[[file:img/bootstrap_results_table.svg]]

* When?
** Errors in variables
Total Least Squares (TLS)

Remember:
#+reveal_html: <object data=index.html#/sec-3-2 width="600" height="400"> <embed src=index.html#/sec-3-2 width="600" height="400"> </embed> Error: Embedded data could not be displayed. </object>

# 

** Errors in variables
Total Least Squares (TLS)

Remember:
#+reveal_html: <object data=index.html#/sec-3-1 width="600" height="400"> <embed src=index.html#/sec-3-1 width="600" height="400"> </embed> Error: Embedded data could not be displayed. </object>

# 

** Errors in variables
Total Least Squares (TLS)
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \boldsymbol{A}(\boldsymbol{Y} - \boldsymbol{E}) = -(\boldsymbol{P} - \boldsymbol{F})
  \]
#+end_src

** Errors in variables
Total Least Squares (TLS)
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \boldsymbol{A}(\boldsymbol{Y} - \boldsymbol{E}) = -(\boldsymbol{P} - \boldsymbol{F})
  \]
#+end_src

#+reveal_html: <br>

#+attr_html: :width 60%
[[file:img/LeastSquaresOffsets_1000.gif]]

** Errors in variables
Total Least Squares (TLS)
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \begin{array}
    \boldsymbol{A_{tls}} = \arg\min_{\boldsymbol{A}} || [(\boldsymbol{A}\boldsymbol{\hat{Y}} + \boldsymbol{\hat{P}})~ (\boldsymbol{\hat{Y}} + \boldsymbol{A}^{-1}\boldsymbol{\hat{P}})]||_{\ell_2}\\
    \text{subject to:}~~ \boldsymbol{A}\boldsymbol{\hat{Y}} = -\boldsymbol{\hat{P}}\\
  \end{array}
  \]
#+end_src
#+reveal_html: <div style="font-size: 50%;">
/Markovsky and Van Huffel 2007/
#+reveal_html: </div>


** Errors in variables
Total Least Squares (TLS)
#+reveal_html: <br>
#+reveal_html: <br>

#+begin_src latex :exports results :results html
  \[
  \begin{array}
    \boldsymbol{A_{tls}} = \arg\min_{\boldsymbol{A}} || [(\boldsymbol{A}\boldsymbol{\hat{Y}} + \boldsymbol{\hat{P}})~ (\boldsymbol{\hat{Y}} + \boldsymbol{A}^{-1}\boldsymbol{\hat{P}})]||_{\ell_2}\\
    \text{subject to:}~~ \boldsymbol{A}\boldsymbol{\hat{Y}} = -\boldsymbol{\hat{P}}\\
  \end{array}
  \]
#+end_src
#+reveal_html: <div style="font-size: 50%;">
/Markovsky and Van Huffel 2007/
#+reveal_html: </div>

#+reveal_html: <br>
- To incorporate in pipeline, we need a structure constraint TLS algorithm (fast)
- A LASSO with TLS would also be nice.

Not implemented yet!

** 
#+reveal_html: <br>
#+reveal_html: <br>
#+reveal_html: <br>
Thanks

